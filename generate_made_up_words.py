# -*- coding: utf-8 -*-
"""Generate Made-Up Words.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fYKla3bW57Bd6703-a2Yd_pY8EiUaQAn
"""

#Stephanie Dominguez
#October 9, 2023
#Task: One .py file containing appropriately-commented code that:
#Generates made-up words.  These words should have regularly-placed vowels and should be multi-syllabic.  The number of syllables should also be randomly-determined (though you should set an upper-limit on the number of syllables and you can determine how many letters per syllable)
#Randomly replaces one letter  in a given name with another character.
#A short creative expression that makes use of at least one made-up word and one name generated by your code.  This could be a very short story, poem, song or other work of art.  The only requirement is that you use your algorithmically-generated work as a jumping-off point.


#import random library
import random

#defining my vowel string -- excluding Y
vowels = "aeiou"

#defining my consonants string
consonants = "bcdfghjklmnpqrstvwxyz"

#randomly selecting a consonant and a vowel
syllableOne = consonants [random.randint(0,len(consonants)-1)] + vowels[random.randint(0, len (vowels)-1)]

#randomly selecting a consonant, vowel, and vowel
syllableTwo = consonants [random.randint(0,len(consonants)-1)] + vowels[random.randint(0, len (vowels)-1)] + vowels[random.randint(0, len (vowels)-1)]
# randomly selecting consonant, vowel, and consonant
syllableThree = consonants [random.randint(0,len(consonants)-1)] + vowels[random.randint(0, len (vowels)-1)] + consonants [random.randint(0,len(consonants)-1)]

#creating a sequence for my first word
firstWord = syllableOne + syllableTwo + syllableThree

#creating a sequence for my second word
secondWord = syllableThree + syllableOne + syllableTwo

#creating a sequence for my third word
thirdWord = syllableOne + syllableOne + syllableThree

#creating a sequence for my fourth word
fourthWord = syllableThree + syllableTwo + syllableOne

#creating a sequence for my fifth word
fifthWord = syllableTwo + syllableThree + syllableOne


#randomly make a word and giving it a range to randomly select between
makeWord = random.randint(1,5)

#creating instructions for if the value ends up being 1, then instructing it what to print
if makeWord == 1:
  print(firstWord)

##creating instructions for if the value ends up being 2, then instructing it what to print
elif makeWord == 2:
  print(secondWord)

##creating instructions for if the value ends up being 3, then instructing it what to print
elif makeWord == 3:
  print(thirdWord)

#creating instructions for if the value ends up being 4, then instructing it what to print
elif makeWord == 4:
  print(fourthWord)

#creating instructions for if the value ends up being 5, then instructing it what to print
elif makeWord == 5:
  print (fifthWord)

#Task -- second part of the lab-- continue to refer to Shrout's google doc

#my word will be something silly and inspired by the halloween theme of Colab
userName = ("ghostKitty")


#the section below is practically a copy and paste from my previous work in this course

#creating a random split
randomSplit = random.randint (0, len(userName))

#the lowercase ascii characters in the range
number = random.randint(97,122)

#this is a creating the first part of a string that adds to full user input, hence the name first split and it being empty
firstSplit = ""

#second string that adds to full user input, and it being empty for that reason
secondSplit = ""

#this is the string that will be used to print the final output
emptyString = ""


#creating a function and this will adds a space and divide the string
for i in range(0, randomSplit- 1):
  #concatating the intial split and user input together
  firstSplit = firstSplit + userName [i]
   # this will use the ascii table to provide a character
firstSplit = firstSplit + chr(number)
 # instructing python where to begin and end the index
for i in range(randomSplit, len(userName)):
# recalling the second string and indexing it
  secondSplit = secondSplit + userName [i]
#concataning the alternations to user input
emptyString = firstSplit + secondSplit

#instructions to print repsone to user input
print(emptyString)

#Helped by Elizabeth Gallegos

##explaining concatenation

name = "stephanie"
age = 21


print("My name is " + name + " and I am " + str(age) + ".")