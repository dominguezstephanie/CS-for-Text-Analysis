# -*- coding: utf-8 -*-
"""Text Analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iZh3EUCQUkDP1JSsnpZ8lcZPutoFaefg
"""

#Stephanie Domínguez
#dec 7, 2023
 #Task: Text analysis
 #The first should be a fruitful function called findHighCountIndex with two parameters:
 #a list and a starting point (index) in that list.
 #It should return the index of the word-count dyad with the highest count, between that starting point and the end of the list.
  #(Adapt findMinIndexI here)


#importing to LOwer function signature with parameter
def toLower (lowerWord):
# have an empty string to fill later
  finalWord = ""
#going thru the full range of the word
  for i in range(0, len(lowerWord)):
#pulling from the first character in the string and getting the ascii value of it as well
    firstChar = ord(lowerWord[i])
#if the character is inbetween the uppercase range, we're going to add 32 to lowercase it
    if 90 >=firstChar >= 65:
      firstChar = firstChar + 32
# storing/updating the final word
      finalWord= finalWord + chr(firstChar)
#if not inbetween the uppercase range, were going to leave it alone
    else:
      finalWord= finalWord + chr(firstChar)
#making it fruitful
  return finalWord


#imporitng remove punct
#function signature with parameter
def removePunct (noPunct):
#have an empty string to fill for later
  finalWord= ""
#python goes thru th full range of characters in the word
  for i in range(0,len(noPunct)):
  #pulling from the first character in the string and getting the ascii value of it as well
    firstChar = ord(noPunct[i])
  #boolean statements for firstChar. the first one is for uppercase letter
  #the second one is for lowercase letters, and the last one is for the space
    if 65 <= firstChar <= 90 or 97<= firstChar <=122 or firstChar == 32:
    #tell python to keep the things we care about bc it's going to forget about the punctuation
      finalWord= finalWord + chr(firstChar)
  #making it fruitful
  return finalWord


#Num in list (3.2)
  #function will tell me the number of times an item appears in a list as an integer form
def numInList(myList,searchForIt):
#have python search for their number within their list

#establishing counter variable
  counter = 0
  #going thru the full list
  for i in range(len(myList)):
    #if python finds what were looking searching for, were going to add 1 to the counter because thats how many times it is
    if myList[i] == searchForIt:
      counter = counter + 1
    #returning the amount of times we saw the item in the list
  return counter



#code from 2.4 that I copied over-- signature line for function countWords
def countWords(parameter):
  #set my index count to 1 because there is no need to start at 0
  finalCount = 1
  #making an empty string to store parameter, and if paramater is nothing, then it counts as 0
  if parameter == "":
    #if the string is empty that means there are zero words
    finalCount = 0
    #using a for loop used to iterate through spaces and the range is my param
  for i in range (len(parameter)):
    #using if statement to connect to the ascii value of space
    if ord(parameter[i]) == 32:
      #concatonating the spaces to calculate the number of words
      finalCount = finalCount + 1
      #return function to get a value back/ making it fruitful
  return finalCount

#function that converts words of a string into a list
def stringToList(parameter):
  #clean the string no punctuation and al lowers
  cleanString = toLower(removePunct(parameter))
#establish list len by having a variable of num to hold the word count of the param
  num = countWords(cleanString)
  #finalList is going to have an empty string and multiply it by the number of words in param
  finalList = [""] * num
  wordHolder = ""
  wordCounter = 0
 #setting counter variable i to 0
  l = 0
#creating a while loop to iterate through each character in the param length (0 index)
  while l <= len(cleanString) - 1:
#if i does not hit a blank spot (aka just letter, it will hold the word, store it, and add the param index to wordHolder)
    if cleanString[l] != " ": #if param index position does not equal to an empty space
      wordHolder = wordHolder + cleanString[l]
#if our i does hit a blank spot, it will add the next number up to wordCounter and keep wordHolder empty
    else:
      finalList[wordCounter] = wordHolder
      wordCounter = wordCounter + 1
      wordHolder = ""
    l = l + 1
  finalList[wordCounter] = wordHolder
  return finalList

#doing a version of unique words inside of countWordsPair -- this is my final function
def countWordsPair(myList):
  #unique word function. establish empty list
  uniqueList= []
  for i in range (len(myList)):
    word = myList [i]
    if word not in uniqueList:
      uniqueList.append(word)
  finalList=[]
 #go thru the len of words in unique list
  for i in range (len(uniqueList)):
    wordTwo =uniqueList[i]
#because we know the word only appears once, were searching for it in myList
    wordTwoCounter = numInList(myList,wordTwo)
  #establish a dyad
    dyad = [wordTwo,wordTwoCounter]
    finalList.append(dyad)
  return finalList


#this function sorts my dyad list function
def countedListSort(dyadList):
#creating a for loop to iterate through the range of the items in my list
  for i in range(len(dyadList)):
    #storing the highest Dyad index in a variable
    highestDyadIndex = findHighCountIndex(dyadList, i)
    #storing the highest Dyad index of the list in a different variable
    highestDyad = dyadList[highestDyadIndex]
    #the index position of the dyad list is the holding variable
    holdingVar = dyadList[i]
    #overwriting away:
    dyadList[i] = highestDyad
    dyadList[highestDyadIndex] = holdingVar


#main sig line
def main():
  print(countWordsPair(stringToList("Since 1855, Bates College has been dedicated to the emancipating potential of the liberal arts. Bates educates the whole person through creative and rigorous scholarship in a collaborative residential community. With ardor and devotion — Amore ac Studio — we engage the transformative power of our differences, cultivating intellectual discovery and informed civic action. Preparing leaders sustained by a love of learning and a commitment to responsible stewardship of the wider world, Bates is a college for coming times. Since its founding in 1855, Bates College has welcomed men and women from diverse racial, ethnic, religious and economic backgrounds. A private, highly selective, residential college devoted to undergraduate study in the liberal arts, Bates has always stood firmly for the ideals of academic rigor, intellectual curiosity, egalitarianism, social justice and freedom. Bates is recognized for its inclusive social character and progressive tradition, and is rightly celebrated as one of the first U.S. institutions of higher learning to admit women and people of color. All activities, resources, and facilities have always been open to all members of the Bates community. Bates does not believe in — and has never allowed on campus and will never allow — organizations such as fraternities or sororities that exclude people. Bates values the diversity of persons and perspectives, supporting this commitment through official college statements and policies.")))
  print(countWordsPair(stringToList("Bates is a college of the liberal arts and sciences, nationally recognized for the qualities of the educational experience it provides. It is a coeducational, nonsectarian, residential college with special commitments to academic rigor, and to assuring in all of its efforts the dignity of each individual, and access to its programs and opportunities by qualified learners. Bates prizes both the inherent values of a demanding education and the profound usefulness of learning, teaching, and understanding. Moreover, throughout the history of the College, Bates's graduates have linked education with service, leadership, and obligations beyond themselves. As a college of the liberal arts and sciences, Bates offers a curriculum and faculty that challenge students to attain intellectual achievements and to develop powers of critical assessment, analysis, expression, aesthetic sensibility, and independent thought. In addition, Bates recognizes that learning is not exclusively restricted to cognitive categories, and that the full range of human experience needs to be encouraged and cultivated. The College expects students to appreciate the discoveries and insights of established traditions of learners, as well as to participate in the resolution of what is unknown. Bates is committed to an open and supportive residential environment. The College's programs are designed to encourage student development and to foster student leadership, service, and creativity. The College sponsors cultural, volunteer, athletic, social, and religious opportunities which are open to all students, and values participation in these activities. Bates also recognizes that it has responsibilities to the larger community. Where possible when consistent with its primary responsibilities to its students, faculty, and alumni, the College makes available its educational and cultural resources, its expertise, and its collective energies to professional as well as to regional communities outside the institution."
)))
  print(countWordsPair(stringToList("The College is unsectarian in its organization, aims and methods, but it is unequivocally Christian.  Breadth and thoroughness are sought, not only in literary and scientific attainments, but in moral and spiritual culture.  What are called the vices of student life are practically unknown at Bates. No student can be a member of the College without taking and keeping a pledge to abstain from alcoholic drinks, and no student may receive beneficiary aid without abstaining from all use of tobacco.  Hazing has never been tolerated.  A large percentage of the students are actively religious, and among them are represented nearly all the religious denominations of New England.  It has been the constant aim of the College to encourage and aid students of limited means and to exclude such habits and customs as lead to extravagant and unnecessary expenditures.  Planted in a thrifty and frugal community, Bates is for a wide area the natural home for students of limited means.  The community, with its numerous industries, offers unusual opportunities for work; and college spirit and tradition make labor honorable. The Faculty of Bates find one of their highest pleasures in helping young men and young women to solve the problem of ways and means. Students of ample, of moderate, and of limited means live and work together in absolute equality.  From its organization in 1863, the College has received young women on the same terms with young men, thus beginning on the Atlantic seaboard the movement for the higher education of women.")))


#calling main to do its thaaang
main()